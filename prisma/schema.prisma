// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  CUSTOMER

  @@map("user_type")
}

model User {
  userId         Int           @id @default(autoincrement()) @map("user_id")
  username       String        @unique
  email          String        @unique @db.VarChar(255)
  password       String        @db.VarChar(255)
  phoneNumber    String        @map("phone_number") @db.VarChar(20)
  profilePicture String?        @map("profile_picture")
  userType       UserType      @default(CUSTOMER) @map("user_type")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @map("updated_at")
  lastLogin      DateTime?      @map("last_login")
  travelAgency   TravelAgency?
  tourist        Tourist?

  @@map("users")
}

model TravelAgency {
  travelAgencyId    Int     @id @default(autoincrement()) @map("travel_agency_id")
  userId            Int     @unique @map("user_id")
  agencyName        String  @map("agency_name") @db.VarChar(150)
  agencyDescription String?  @map("agency_description")
  ruc               String  @db.VarChar(20)
  address           String  @db.VarChar(255)
  logoUrl           String?  @map("logo_url")
  website           String?  @db.VarChar(255)
  verified          Boolean @default(false)
  user              User    @relation(fields: [userId], references: [userId])

  @@map("travel_agencies")
}

enum DocumentType {
  DNI
  PASSPORT
  CE

  @@map("document_type")
}

model Tourist {
  touristId      Int          @id @default(autoincrement()) @map("tourist_id")
  userId         Int          @unique @map("user_id")
  firstName      String       @map("first_name") @db.VarChar(100)
  lastName       String       @map("last_name") @db.VarChar(100)
  documentType   DocumentType @map("document_type")
  documentNumber String       @map("document_number") @db.VarChar(50)
  birthdate      DateTime     @map("birthdate") @db.Date
  country        String?       @db.VarChar(100)
  gender         String?       @db.VarChar(10)
  user           User         @relation(fields: [userId], references: [userId])

  @@map("tourists")
}
